name: datadog-service-catalog-provider

on:
  push:
    branches:
      - main
  workflow_dispatch:
jobs:

  # check-if-service-datadog-yaml-file-changed:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
      
  #     - name: Check if service.datadog.yaml file is changed
  #       id: changed-files
  #       uses: tj-actions/changed-files@v38
  #       with:
  #         files: service.datadog.yaml
      
  #     - name: Cancel run if service.datadog.yaml file is unchanged 
  #       if: steps.changed-files.outputs.any_changed != 'true'
  #       shell: bash
  #       run: while true; do echo "Waiting for job to be cancelled"; sleep 5; done
        
  update-DD-service-catalog:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current repo
        uses: actions/checkout@v3
        
      - name: Update/create service data env variables
        uses: mikefarah/yq@master 
        with: 
          cmd: |
            echo "dd-service=$(yq '.dd-service' 'service.datadog.yaml')" >> $GITHUB_ENV
            echo "dd-team=$(yq '.team' 'service.datadog.yaml')" >> $GITHUB_ENV
            echo "dd-application=$(yq '.application' 'service.datadog.yaml')" >> $GITHUB_ENV
            echo "dd-team=$(yq '.team' 'service.datadog.yaml')" >> $GITHUB_ENV
            echo "dd-application=$(yq '.application' 'service.datadog.yaml')" >> $GITHUB_ENV
            echo "dd-description=$(yq '.description' 'service.datadog.yaml')" >> $GITHUB_ENV
            echo "dd-lifecycle=$(yq '.lifecycle' 'service.datadog.yaml')" >> $GITHUB_ENV
            echo "dd-tier=$(yq '.tier' 'service.datadog.yaml')" >> $GITHUB_ENV
            echo "dd-contacts-email=$(yq '.contacts' 'service.datadog.yaml' | while IFS= read -r line; do if echo "$line" | grep -q "contact: .*@.*"; then echo "$line" | awk '{print $2}'; break; fi; done)" >> $GITHUB_ENV
            echo "dd-contacts-slack=$(yq '.contacts' 'service.datadog.yaml' | while IFS= read -r line; do if echo "$line" | grep -q "https://app.slack.com/.*"; then echo "$line" | awk '{print $2}'; break; fi; done)" >> $GITHUB_ENV
          
            echo "dd-contacts=$(yq -r '.contacts' 'service.datadog.yaml' | while IFS= read -r line; do echo "\n$line"; done)"            

            echo "dd-links="$(yq -r '.links' 'service.datadog.yaml')"" >> $GITHUB_ENV
            echo "dd-tags="$(yq '.tags' 'service.datadog.yaml')"" >> $GITHUB_ENV
            echo "dd-integrations="$(yq '.integrations' 'service.datadog.yaml')"" >> $GITHUB_ENV          


      - name: Check if dd-service output is working
        run: echo "${{ env.dd-service }}"
      - name: Check if dd-team output is working
        run: echo '${{ env.dd-team }}'
      - name: Check if dd-application output is working
        run: echo '${{ env.dd-application }}'
      - name: Check if dd-description output is working
        run: echo "${{ env.dd-description }}"
      - name: Check if dd-lifecycle output is working
        run: echo "${{ env.dd-lifecycle }}"
      - name: Check if dd-tier output is working
        run: echo "${{ env.dd-tier }}"

      - name: Check if dd-contacts-slack output is working
        run: echo "${{ env.dd-contacts-slack }}" 
      - name: Check if dd-contacts-email is working
        run: echo "${{ env.dd-contacts-email }}" 
      - name: Check if dd-contacts is working
        run: echo "${{ env.dd-contacts }}"

      - name: Check if dd-links output is working
        run: echo "${{ env.dd-links}}"
      - name: Check if dd-tags output is working
        run: echo "${{ env.dd-tags }}"
        
      - name: Check if dd-integrations output is working
        run: echo "${{ env.dd-integrations }}"


      # - uses: arcxp/datadog-service-catalog-metadata-provider@v2
      #   with:
      #     schema-version: v2.1
      #     datadog-hostname: api.us5.datadoghq.com
      #     datadog-key: ${{ secrets.DATADOG_API_KEY }}
      #     datadog-app-key: ${{ secrets.DATADOG_APP_KEY }}

      #     service-name: ${{ env.dd-service  }}
      #     team: ${{ env.dd-team }}
      #     application: ${{ env.dd-application}}
      #     description: ${{ env.dd-description  }}
      #     lifecycle: ${{ env.dd-lifecycle }}
      #     tier: ${{ env.dd-tier }}
      #     email: ${{ env.dd-contacts-email }}
      #     slack-support-channel: ${{ env.dd-contacts-slack }}

      #     contacts: |
      #       ${{ env.dd-contacts }}

      #     links: |
      #       ${{ env.dd-links }}
            
      #     integrations: |
      #       ${{ env.dd-integrations }}
          