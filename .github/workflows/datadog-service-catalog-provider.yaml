name: datadog-service-catalog-provider

on:
  push:
    branches:
      - main
  workflow_dispatch:
jobs:

  # check-if-service-datadog-yaml-file-changed:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
      
  #     - name: Check if service.datadog.yaml file is changed
  #       id: changed-files
  #       uses: tj-actions/changed-files@v38
  #       with:
  #         files: service.datadog.yaml
      
  #     - name: Cancel run if service.datadog.yaml file is unchanged 
  #       if: steps.changed-files.outputs.any_changed != 'true'
  #       shell: bash
  #       run: while true; do echo "Waiting for job to be cancelled"; sleep 5; done
        
  update-DD-service-catalog:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current repo
        uses: actions/checkout@v3
        
      - name: Update/create service data env variables
        uses: mikefarah/yq@master 
        id: test
        with: 
          cmd: |
            echo "dd_service=$(yq '.dd-service' 'service.datadog.yaml')" >> $GITHUB_ENV
            echo "dd_team=$(yq '.team' 'service.datadog.yaml')" >> $GITHUB_ENV
            echo "dd_application=$(yq '.application' 'service.datadog.yaml')" >> $GITHUB_ENV
            echo "dd_team=$(yq '.team' 'service.datadog.yaml')" >> $GITHUB_ENV
            echo "dd_application=$(yq '.application' 'service.datadog.yaml')" >> $GITHUB_ENV
            echo "dd_description=$(yq '.description' 'service.datadog.yaml')" >> $GITHUB_ENV
            echo "dd_lifecycle=$(yq '.lifecycle' 'service.datadog.yaml')" >> $GITHUB_ENV
            echo "dd_tier=$(yq '.tier' 'service.datadog.yaml')" >> $GITHUB_ENV
            echo "dd_contacts-email=$(yq '.contacts' 'service.datadog.yaml' | while IFS= read -r line; do if echo "$line" | grep -q "contact: .*@.*"; then echo "$line" | awk '{print $2}'; break; fi; done)" >> $GITHUB_ENV
            echo "dd_contacts-slack=$(yq '.contacts' 'service.datadog.yaml' | while IFS= read -r line; do if echo "$line" | grep -q "https://app.slack.com/.*"; then echo "$line" | awk '{print $2}'; break; fi; done)" >> $GITHUB_ENV
            
            dd_contacts_string=$(yq '.contacts' 'service.datadog.yaml')
            echo "dd_contacts<<EOF" >> $GITHUB_ENV
            echo "$dd_contacts_string" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
            
            dd_links_string=$(yq '.links' 'service.datadog.yaml')
            echo "dd_links<<EOF" >> $GITHUB_ENV
            echo "$dd_links_string" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV

            dd_tags_string=$(yq '.tags' 'service.datadog.yaml')
            echo "dd_tags<<EOF" >> $GITHUB_ENV
            echo "$dd_tags_string" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV

            dd_integrations_string=$(yq '.integrations' 'service.datadog.yaml')
            echo "dd_integrations<<EOF" >> $GITHUB_ENV
            echo "$dd_integrations_string" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV


      - name: Check if dd_service output is working
        run: echo "${{ env.dd_service }}"
      - name: Check if dd_team output is working
        run: echo '${{ env.dd_team }}'
      - name: Check if dd_application output is working
        run: echo '${{ env.dd_application }}'
      - name: Check if dd_description output is working
        run: echo "${{ env.dd_description }}"
      - name: Check if dd_lifecycle output is working
        run: echo "${{ env.dd_lifecycle }}"
      - name: Check if dd_tier output is working
        run: echo "${{ env.dd_tier }}"

      - name: Check if dd_contacts-slack output is working
        run: echo "${{ env.dd_contacts-slack }}" 
      - name: Check if dd_contacts-email is working
        run: echo "${{ env.dd_contacts-email }}" 

      - name: Check if dd_contacts is working
        run: echo "${{ env.dd_contacts }}"

      - name: Check if dd_links output is working
        run: echo "${{ env.dd_links }}"
      - name: Check if dd_tags output is working
        run: echo "${{ env.dd_tags }}"
        
      - name: Check if dd_integrations output is working
        run: echo "${{ env.dd_integrations }}"


      # - uses: arcxp/datadog-service-catalog-metadata-provider@v2
      #   with:
      #     schema-version: v2.1
      #     datadog-hostname: api.us5.datadoghq.com
      #     datadog-key: ${{ secrets.DATADOG_API_KEY }}
      #     datadog-app-key: ${{ secrets.DATADOG_APP_KEY }}

      #     service-name: ${{ env.dd_service  }}
      #     team: ${{ env.dd_team }}
      #     application: ${{ env.dd_application}}
      #     description: ${{ env.dd_description  }}
      #     lifecycle: ${{ env.dd_lifecycle }}
      #     tier: ${{ env.dd_tier }}
      #     email: ${{ env.dd_contacts-email }}
      #     slack-support-channel: ${{ env.dd_contacts-slack }}

      #     contacts: |
      #       ${{ env.dd_contacts }}

      #     links: |
      #       ${{ env.dd_links }}
            
      #     integrations: |
      #       ${{ env.dd_integrations }}
          