name: datadog-service-catalog-provider

on:
  workflow_call:
    secrets:
      dd_api_key: 
        description: 'A Datadog API key'
        required: true
      dd_app_key:
        description: 'A Datadog app key'
        required: true

jobs:
  # Checks if any service.datadog.yaml exists and was edited -> puts all of their paths into an arr -> output for next job in "list_of_service_datadog_files"
  check_for_service_datadog_yaml_files_changed:
    runs-on: ubuntu-latest
    #Output defined by bash script below. Getting list of service.datadog.yaml filepaths that were modified, in JSON array format ["filepath1", "filepath2", ...] 
    outputs:
      list_of_service_datadog_files: ${{ steps.get_service_files.outputs.filepaths }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get changed files across repo
        id: changed_files
        uses: tj-actions/changed-files@v42.0.4

      - name: Check for service.datadog.yaml files changed and store them in array
        id: get_service_files
        run: |
          changedFilesArr=(${{steps.changed_files.outputs.all_changed_files}})
          outputVal="["
          i=0
          for filepath in ${changedFilesArr[@]}; do
            if [[ $filepath == *"service.datadog.yaml" ]]; then
              if [[ $i -eq 0 ]]; then
                outputVal+="\"./$filepath\""
              else
                outputVal+=", \"./$filepath\""
              fi
              i=$(( i + 1 ))
            fi
          done
          outputVal+="]"
          echo "$outputVal"
          echo "filepaths=$outputVal" >> "$GITHUB_OUTPUT"

  #if there's multiple files in one file with "---"", split them into separate files, then add them into the inputs.matrix_path
  look_for_multiple_files_in_single_yaml_and_separate:
    if: needs.check_for_service_datadog_yaml_files_changed.outputs.list_of_service_datadog_files != '[]'
    needs: check_for_service_datadog_yaml_files_changed
    # outputs: list_of_service_datadog_files: ${{}}
    strategy:
      #Get list of service.datadog.yaml files from output in job above.
      matrix:
        file_paths: ${{ fromJSON(needs.check_for_service_datadog_yaml_files_changed.outputs.list_of_service_datadog_files) }}
    runs-on: ubuntu-latest
    outputs:
      list_of_service_datadog_files: ${{ steps.parsed_and_updated_service_files.outputs.filepaths }}
    steps:
      - name: Checkout current repo
        id: parsed_and_updated_service_files
        uses: actions/checkout@v4.1.1

      - name: Parse if multiple files in one yaml file
        uses: mikefarah/yq@master
        with:
          #loop through matrix yaml files and create new files, splitting all the yaml's with "---"
          cmd: |
            echo "${{ matrix.file_paths }}"
            yq -s '"tmp_file_" + $index' ${{ matrix.file_paths }}

            outputVal="["

            ls | grep "tmp_file_" | while read -r new_filepath; do
              outputVal+="\"./$new_filepath\""
            done

            outputVal+="]"
            echo "filepaths=$outputVal" >> "$GITHUB_OUTPUT"

  # call_reusable_workflow:
  #   #Call the update-datadog-service-catalog action on each "path"(service.datadog.yaml file) found.
  #   needs: update_datadog_service_catalog_with_matrix_values
  #   strategy:
  #     #Get list of service.datadog.yaml files from output in job above.
  #     matrix:
  #       paths: ${{ fromJSON(needs.check_for_service_datadog_yaml_files_changed.outputs.list_of_service_datadog_files) }}
  #   uses: ./.github/workflows/update-datadog-service-catalog.yaml
  #   secrets: inherit
  #   with:
  #     matrix_path: ${{ matrix.paths }}


